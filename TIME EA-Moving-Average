
#property copyright "Copyright 2023, MetaQuotes Ltd."
#property link "https://www.mql5.com"
#property version "1.00"

//+------------------------------------------------------------------+
//| include Expert initialization function                                   |
//+-----------------------------------------------------------
#include <Trade\Trade.mqh>

//---------------------------------------------------------------------+
//|  INPUT GLOBAL VARIABLE                                             |
//+--------------------------------------------------------------------+
     struct RANGE_STRUCT {
     
    datetime  start_time; //start of range
    datetime  end_time;   //end of range
    datetime  close_time; //close of range
    double  high;         //high of range
    double low;           //low of range
    bool f_entry          //flag if we are inside the range
    bool f_high_breakout; //flag if a high breakout occurance
    bool f_low_breakout;  //flag if a low breakout occurance
    
   RANGE_STRUCT() :start_time(0),end_time(0),close_time(0),high(0),low(99999),f_highbreakout(false).f_high_breakout(false).f_high_breakout(false),f_low_breakout(false) {};  
   };
   
   RANGE_STRUCT range;
   MqlTick prevTick,lastTick;
   CTrade trade;
//+------------------------------------------------------------------+
//| INPUT |
//+------------------------------------------------------------------+

input int InpRangeStart = 600; //range start time is minutes after mid -night
input int InpRangeDuration = 120; // range duration in minutes
input int InpRangeClose = 1200; //range close time in minutes
input double InpLots = 0.01; // lot side
input long InpMageicNumber = 12345; // magic number

//+------------------------------------------------------------------+
//| Expert initialization function |
//+------------------------------------------------------------------+
int OnInit(){

if(InpMageicNumber <= 0){
Alert("MageicNumber <= 0");
return INIT_PARAMETERS_INCORRECT;
}
if(InpLots <= 0 || InpLots > 1){
Alert("lots <= 0 or > 1");
return INIT_PARAMETERS_INCORRECT;
}
if(InpRangeStart <= 0 || InpLots >= 1440){
Alert(" Range start < 0 or >= 1440");
return INIT_PARAMETERS_INCORRECT;
}

if(InpRangeDuration <= 0 || InpRangeDuration >= 1440){
 Alert(" Range start < 0 or >= 1440");
 return INIT_PARAMETERS_INCORRECT;
}

if(InpRangeClose <= 0 || InpRangeClose >= 1440 || (InpRangeStart+InpRangeDuration)%1440 == InpRangeClose){
 Alert("Close time < 0 or >= 1440 or end time == close time");
 return INIT_PARAMETERS_INCORRECT;
}

return(INIT_SUCCEEDED);
}

//+------------------------------------------------------------------+
//| Expert deinitialization function |
//+------------------------------------------------------------------+
void OnDeinit(const int reason)
{

}

//+------------------------------------------------------------------+
//| Expert tick function |
//+------------------------------------------------------------------+
void OnTick()
{

}
